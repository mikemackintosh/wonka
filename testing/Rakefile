require 'rake'
require 'rspec/core/rake_task'
require 'json'

task :spec    => ['spec:all', 'summarize']
task :default => :spec

stages = []
Dir.glob('./spec/*').each do |dir|
  next unless File.directory?(dir)
  stages << File.basename(dir)
end

namespace :spec do
  task :all     => stages
  task :default => :all

  ENV['TARGET_HOST'] = "localhost"
  RSpec::Core::RakeTask.new(:before) do |t|
    t.pattern = "spec/before/*_spec.rb"
    t.fail_on_error = false
    t.rspec_opts = "--format json \ --out before.json"
  end

  # pid = Process.spawn('go', 'run', 'cmd/useradd/useradd.go', :err=>:out)
  puts %x[go run ../cmd/useradd/useradd.go splug].inspect

  RSpec::Core::RakeTask.new(:after) do |t|
    t.pattern = "spec/after/*_spec.rb"
    t.fail_on_error = false
    t.rspec_opts = "--format json \ --out after.json"
  end
end

task :summarize do
  File.open("summary.log","a") do |f|
    stages.each do |file|
      ss_json = JSON[File.read("#{file}.json")]
      ss_json.each do |key, val|
        if key=='examples'
          val.each { |test|
            stage = test["file_path"].gsub(/\.\/spec\//,"").gsub(/\/.*_spec.*/,"")
            test["stage"] = stage
            git_metadata(test)
            f.puts(JSON.generate(test))
          }
        end
      end
    end
  end
end

# Add in the rest of our useful data
def git_metadata ( json_hash )
  json_hash["time"]   = Time.now.strftime("%Y-%m-%d-%H:%M")
  json_hash["branch"] = %x[git rev-parse --abbrev-ref HEAD].gsub(/\n/,"")
  json_hash["commit"] = %x[git log -1 --pretty='%H'].gsub(/\n/,"")
  json_hash["author"] = %x[git log -1 --pretty='%cE'].gsub(/\n/,"")
end
